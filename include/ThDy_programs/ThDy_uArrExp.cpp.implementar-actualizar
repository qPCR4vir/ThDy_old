#include "StdAfx.h"
#pragma unmanaged

#include "prog_comm_functions.h"


int		microArrayProgTest ( CProgParam_uArrExp *IPrgPar_uArr)  
{
	time_t t_0 = time(NULL);
	const int MaxGrDeg=300 ;			// crear NonDegSet para las sondas con menos de este gr de deg. Poner como ProgParam??

	string of( IPrgPar_uArr->_cp._OutputFile.Get() ), f;

	f=of+".uArr.Tm.csv" ;	ofstream osTm;		if (IPrgPar_uArr->_cp._st_savTm		)	{ osTm.open		(f.c_str()	);	assert(osTm		);}
	f=of+".uArr.G.csv"  ;	ofstream osG ;		if (IPrgPar_uArr->_cp._st_savG		)	{ osG.open		(f.c_str()	);	assert(osG		);}
	f=of+".uArr.Pos.csv";	ofstream osPos;		if (IPrgPar_uArr->_cp._st_savPos	)	{ osPos.open	(f.c_str()	);	assert(osPos	);}
	f=of+".Plasm_Tm.csv";	ofstream osPl_Tm;	if (IPrgPar_uArr->_cp._st_savTm_Plasm)	{ osPl_Tm.open	(f.c_str()	);	assert(osPl_Tm	);}
	f=of+".Plasm_G.csv";	ofstream osPl_G;	if (IPrgPar_uArr->_cp._st_savG_Plasm)	{ osPl_G.open	(f.c_str()	);	assert(osPl_G	);}
	f=of+".uArr.Al.csv";	ofstream osAl;		if (IPrgPar_uArr->_cp._st_savAlign	)	{ osAl.open		(f.c_str()	);	assert(osAl		);}

	auto_ptr<CSaltCorrNN> apNNpar (Create_NNpar(IPrgPar_uArr->_cp)); 	CSaltCorrNN *NNpar = apNNpar.get() ;
	
	CMultSec		pr		(			IPrgPar_uArr->_InputSondeFile.Get() ,		NNpar),
					tg		(			IPrgPar_uArr->_cp._InputTargetFile.Get(),	NNpar,
										IPrgPar_uArr->_cp._MaxTgId	,	
										IPrgPar_uArr->_cp._SecLim		); /*,IPrgPar_uArr->_cp._SecBeg,	IPrgPar_uArr->_cp._SecEnd */

	time_t t_sec = time(NULL);

	auto_ptr<ThDyAlign> apAl; 	
	apAl= Create_ThDyAlign(				IPrgPar_uArr->_cp, pr._TMaxLen , tg._TMaxLen, *NNpar);	ThDyAlign	&Al=*apAl.get();

	osTm	<< Al.AlignMeth()<<" -- T/S" 	;		osG		<< Al.AlignMeth()<<" -- T/S" 	;	osPos <<Al.AlignMeth()<<" -- T/S"  ;	
	osPl_Tm <<"Row_ID"	;	osPl_G  <<"Row_ID"	;		

	// Primero creamos non deg set y el primer renglon de las tablas con el nombre de las sondas

	CTable<Temperature> &tlTm = *(IPrgPar_uArr->_tlTm = new	CTable<Temperature> (" -- T/S",tg._TNSec, pr._TNSec ));	

	for (  pr.goFirstSec()   ; pr.NotEndSec()   ;   pr.goNextSec() )				// recorre todos las sondas
	{	CSec &s = *pr.CurSec() ;
		if (s.Degeneracy() > MaxGrDeg   ) continue;								// sonda "demaciado" deg. No se analisa
		/*pr.AddMultiSec*/ (  s.CreateNonDegSet () ) ;
		if ( CMultSec *nds=s.NonDegSet() ) 
		{	for (  nds->goFirstSec()   ; nds->NotEndSec()   ;   nds->goNextSec() )// recorre todos las var no deg de la sonda
			{	CSec &s = *nds->CurSec() ;
				osTm	<<sep <<s.Name()		;	osG		<<sep <<s.Name()		;	osPos	<<sep <<s.Name()		;	
				osPl_Tm <<"  "<< s.Name()	;	osPl_G  <<"  "<< s.Name()	;	
				tlTm.AddColummnTit(s.Name()	);
			}// recorre todos las var no deg
		} else 
			{	osTm	<<sep <<s.Name()		;	osG		<<sep <<s.Name()		;	osPos	<<sep <<s.Name()		;	
				osPl_Tm <<"  "<< s.Name()	;	osPl_G  <<"  "<< s.Name()	;
				tlTm.AddColummnTit(s.Name()	);
			}
	}

	time_t t_al_created = time(NULL);

	for (  tg.goFirstSec()   ; tg.NotEndSec()   ;   tg.goNextSec() )  // recorre todos los targets
	{	CSec &t = *tg.CurSec() ;
		if ( t.Degeneracy() > 1 ) continue ;				// No analiza las target deg...por ahora.Facil de ampliar
		osTm	<<endl<< t.Name()		;		osG		<<endl<< t.Name()		;	osPos	<<endl<< t.Name()		;	
		osPl_Tm <<endl<< t.Name()<<" \t"	;		osPl_G  <<endl<< t.Name()<<" \t"	 ;		
		tlTm.AddRow(t.Name());
		HybridPr (pr, t, 	Al, osTm, osG,osPos,osPl_Tm,osPl_G,osAl, &tlTm);
		
	}// recorre todos los targets	

	tlTm.compact();

	time_t t_tm_cal = time(NULL);
	osTm<< endl << endl <<"Time sec= "			<< sep<< t_sec			- t_0		
				<< endl <<"Time Ob crea="		<< sep<< t_al_created	- t_sec		
				<< endl <<"Time Tm calc= "		<< sep<< t_tm_cal		-t_al_created ;
	return 1;
}